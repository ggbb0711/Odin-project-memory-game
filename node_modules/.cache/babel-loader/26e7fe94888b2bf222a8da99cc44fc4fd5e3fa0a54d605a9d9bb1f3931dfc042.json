{"ast":null,"code":"var _jsxFileName = \"/home/bbt/Downloads/memory card/memory-card/src/game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game(props) {\n  _s();\n  const [data, setData] = useState([{\n    name: 'Card 1',\n    clicked: false\n  }, {\n    name: 'Card 2',\n    clicked: false\n  }, {\n    name: 'Card 3',\n    clicked: false\n  }, {\n    name: 'Card 4',\n    clicked: false\n  }, {\n    name: 'Card 5',\n    clicked: false\n  }, {\n    name: 'Card 6',\n    clicked: false\n  }, {\n    name: 'Card 7',\n    clicked: false\n  }, {\n    name: 'Card 8',\n    clicked: false\n  }, {\n    name: 'Card 9',\n    clicked: false\n  }, {\n    name: 'Card 10',\n    clicked: false\n  }]);\n  function resetData() {\n    setData([{\n      name: 'Card 1',\n      clicked: false\n    }, {\n      name: 'Card 2',\n      clicked: false\n    }, {\n      name: 'Card 3',\n      clicked: false\n    }, {\n      name: 'Card 4',\n      clicked: false\n    }, {\n      name: 'Card 5',\n      clicked: false\n    }, {\n      name: 'Card 6',\n      clicked: false\n    }, {\n      name: 'Card 7',\n      clicked: false\n    }, {\n      name: 'Card 8',\n      clicked: false\n    }, {\n      name: 'Card 9',\n      clicked: false\n    }, {\n      name: 'Card 10',\n      clicked: false\n    }]);\n  }\n  function randomSort() {\n    let clone = data;\n    for (let i = clone.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = clone[i];\n      clone[i] = clone[j];\n      clone[j] = temp;\n    }\n    setData(clone);\n  }\n  function handleClick(e) {\n    let index = Number(e.target.getAttribute('name'));\n    let clone = data;\n    if (clone[index].clicked) {\n      resetData();\n      randomSort();\n      props.calculatePoint(clone[index].clicked);\n      return;\n    }\n    clone[index].clicked = true;\n    randomSort();\n    props.calculatePoint(clone[index].clicked);\n    return;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map(card => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        name: card.name,\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"hdmtJ3S6JJOJ/TxvAT0W5OyYx6o=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Game","props","data","setData","name","clicked","resetData","randomSort","clone","i","length","j","Math","floor","random","temp","handleClick","e","index","Number","target","getAttribute","calculatePoint","map","card"],"sources":["/home/bbt/Downloads/memory card/memory-card/src/game.js"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function Game(props){\n    const [data,setData]=useState([\n        {\n            name:'Card 1',\n            clicked:false\n        },\n        {\n            name:'Card 2',\n            clicked:false\n        },\n        {\n            name:'Card 3',\n            clicked:false\n        },\n        {\n            name:'Card 4',\n            clicked:false\n        },\n        {\n            name:'Card 5',\n            clicked:false\n        },\n        {\n            name:'Card 6',\n            clicked:false\n        },\n        {\n            name:'Card 7',\n            clicked:false\n        },\n        {\n            name:'Card 8',\n            clicked:false\n        },\n        {\n            name:'Card 9',\n            clicked:false\n        },\n        {\n            name:'Card 10',\n            clicked:false\n        },\n    ]\n    )\n\n    function resetData(){\n        setData([\n            {\n                name:'Card 1',\n                clicked:false\n            },\n            {\n                name:'Card 2',\n                clicked:false\n            },\n            {\n                name:'Card 3',\n                clicked:false\n            },\n            {\n                name:'Card 4',\n                clicked:false\n            },\n            {\n                name:'Card 5',\n                clicked:false\n            },\n            {\n                name:'Card 6',\n                clicked:false\n            },\n            {\n                name:'Card 7',\n                clicked:false\n            },\n            {\n                name:'Card 8',\n                clicked:false\n            },\n            {\n                name:'Card 9',\n                clicked:false\n            },\n            {\n                name:'Card 10',\n                clicked:false\n            },\n        ])\n    }\n\n    function randomSort(){\n        let clone=data\n\n        for(let i=clone.length-1;i>0;i--){\n            const j =Math.floor(Math.random()*(i+1))\n            const temp=clone[i]\n            clone[i]=clone[j]\n            clone[j]=temp\n        }\n\n        setData(clone)\n    }\n\n    function handleClick(e){\n        let index=Number(e.target.getAttribute('name'))\n\n        let clone=data\n        if (clone[index].clicked){\n            resetData()\n            randomSort()\n            props.calculatePoint(clone[index].clicked)\n\n            return\n        }\n        clone[index].clicked=true\n\n        randomSort()\n        props.calculatePoint(clone[index].clicked)\n\n        return\n    }\n\n    return (\n        <div >\n            {data.map(card=>{\n                return(\n                    <div name={card.name} onClick={handleClick}>\n                        <h1>{card.name}</h1>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}