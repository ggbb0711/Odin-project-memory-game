{"ast":null,"code":"var _jsxFileName = \"/home/bbt/Downloads/memory card/memory-card/src/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board(props) {\n  _s();\n  const [data, setData] = useState([{\n    name: 'Card 1',\n    clicked: false\n  }, {\n    name: 'Card 2',\n    clicked: false\n  }, {\n    name: 'Card 3',\n    clicked: false\n  }, {\n    name: 'Card 4',\n    clicked: false\n  }, {\n    name: 'Card 5',\n    clicked: false\n  }, {\n    name: 'Card 6',\n    clicked: false\n  }, {\n    name: 'Card 7',\n    clicked: false\n  }, {\n    name: 'Card 8',\n    clicked: false\n  }, {\n    name: 'Card 9',\n    clicked: false\n  }, {\n    name: 'Card 10',\n    clicked: false\n  }]);\n  let [winState, setWinState] = useState(props.winState);\n  function resetData() {\n    setData(data => data.map(data => {\n      data.clicked = false;\n      return data;\n    }));\n    console.log(data);\n  }\n  function randomSort() {\n    let clone = [...data];\n    for (let i = clone.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = clone[i];\n      clone[i] = clone[j];\n      clone[j] = temp;\n    }\n    setData(clone);\n  }\n  function handleClick(e) {\n    let index = Number(e.target.getAttribute('name'));\n    let clone = data;\n    if (clone[index].clicked) {\n      props.calculatePoint(clone[index].clicked);\n      resetData();\n      randomSort();\n      return;\n    }\n    props.calculatePoint(clone[index].clicked);\n    clone[index].clicked = true;\n    randomSort();\n    return;\n  }\n  function handleRestart() {\n    resetData();\n    randomSort();\n    props.restart();\n  }\n  useEffect(() => {\n    setWinState(props.winState);\n  }, [props.winState]);\n  useEffect(() => {\n    randomSort();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: winState ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You win\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRestart,\n        children: \"Restart ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map((card, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          name: index,\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            name: index,\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n_s(Board, \"ptleesKNbjhuIPtGjb641uwhFFc=\");\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","Board","props","data","setData","name","clicked","winState","setWinState","resetData","map","console","log","randomSort","clone","i","length","j","Math","floor","random","temp","handleClick","e","index","Number","target","getAttribute","calculatePoint","handleRestart","restart","card"],"sources":["/home/bbt/Downloads/memory card/memory-card/src/Board.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nexport default function Board(props){\n    const [data,setData]=useState([\n        {\n            name:'Card 1',\n            clicked:false\n        },\n        {\n            name:'Card 2',\n            clicked:false\n        },\n        {\n            name:'Card 3',\n            clicked:false\n        },\n        {\n            name:'Card 4',\n            clicked:false\n        },\n        {\n            name:'Card 5',\n            clicked:false\n        },\n        {\n            name:'Card 6',\n            clicked:false\n        },\n        {\n            name:'Card 7',\n            clicked:false\n        },\n        {\n            name:'Card 8',\n            clicked:false\n        },\n        {\n            name:'Card 9',\n            clicked:false\n        },\n        {\n            name:'Card 10',\n            clicked:false\n        },\n    ]\n    )\n    let [winState,setWinState]=useState(props.winState)\n\n    function resetData(){\n        setData(data=>data.map(data=>{\n            data.clicked=false\n            return data\n        }))\n        console.log(data)\n    }\n\n    function randomSort(){\n        let clone=[...data]\n\n        for(let i=clone.length-1;i>0;i--){\n            const j =Math.floor(Math.random()*(i+1))\n            const temp=clone[i]\n            clone[i]=clone[j]\n            clone[j]=temp\n        }\n\n        setData(clone)\n    }\n\n    function handleClick(e){\n        let index=Number(e.target.getAttribute('name'))\n\n        let clone=data\n        if (clone[index].clicked){\n            props.calculatePoint(clone[index].clicked)\n            resetData()\n            randomSort()\n\n            return\n        }\n        props.calculatePoint(clone[index].clicked)\n        clone[index].clicked=true\n\n        randomSort()\n\n        return\n    }\n\n    function handleRestart(){\n        resetData()\n        randomSort()\n        props.restart()\n    }\n\n    useEffect(()=>{\n        setWinState(props.winState)\n    },[props.winState])\n\n    useEffect(()=>{\n        randomSort()\n    },[])\n\n\n\n    return (\n        <div className='board'>\n            {winState?\n                (<div>\n                    <h1>You win</h1>\n                    <button onClick={handleRestart}>Restart ?</button>\n                </div>):\n                (<div >\n                    {data.map((card,index)=>{\n                            return(\n                                <div name={index} onClick={handleClick} key={index}>\n                                    <h1 name={index}>{card.name}</h1>\n                                </div>\n                            )\n                    })}\n                </div>)\n        }\n        </div>\n        \n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}