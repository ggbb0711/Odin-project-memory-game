{"ast":null,"code":"var _jsxFileName = \"/home/bbt/Downloads/memory card/memory-card/src/game.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game(props) {\n  _s();\n  const [data, setData] = useState([{\n    name: 'Card 1',\n    clicked: false\n  }, {\n    name: 'Card 2',\n    clicked: false\n  }, {\n    name: 'Card 3',\n    clicked: false\n  }, {\n    name: 'Card 4',\n    clicked: false\n  }, {\n    name: 'Card 5',\n    clicked: false\n  }, {\n    name: 'Card 6',\n    clicked: false\n  }, {\n    name: 'Card 7',\n    clicked: false\n  }, {\n    name: 'Card 8',\n    clicked: false\n  }, {\n    name: 'Card 9',\n    clicked: false\n  }, {\n    name: 'Card 10',\n    clicked: false\n  }]);\n  const [winState, setWinState] = useState(props.winState);\n  function resetData() {\n    setData([{\n      name: 'Card 1',\n      clicked: false\n    }, {\n      name: 'Card 2',\n      clicked: false\n    }, {\n      name: 'Card 3',\n      clicked: false\n    }, {\n      name: 'Card 4',\n      clicked: false\n    }, {\n      name: 'Card 5',\n      clicked: false\n    }, {\n      name: 'Card 6',\n      clicked: false\n    }, {\n      name: 'Card 7',\n      clicked: false\n    }, {\n      name: 'Card 8',\n      clicked: false\n    }, {\n      name: 'Card 9',\n      clicked: false\n    }, {\n      name: 'Card 10',\n      clicked: false\n    }]);\n  }\n  function randomSort() {\n    console.log(1);\n    let clone = [...data];\n    for (let i = clone.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = clone[i];\n      clone[i] = clone[j];\n      clone[j] = temp;\n    }\n    setData(clone);\n  }\n  function handleClick(e) {\n    let index = Number(e.target.name);\n    let clone = data;\n    if (clone[index].clicked) {\n      resetData();\n      randomSort();\n      props.calculatePoint(clone[index].clicked);\n      return;\n    }\n    clone[index].clicked = true;\n    randomSort();\n    props.calculatePoint(clone[index].clicked);\n    return;\n  }\n  function handleRestart() {\n    resetData();\n    randomSort();\n    props.restart();\n  }\n  useEffect(() => {\n    setWinState(props.winState);\n  }, [props.winState]);\n\n  // useEffect(()=>{\n  //     randomSort()\n  // },[])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: winState ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You win\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRestart,\n        children: \"Restart ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map((card, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          name: index,\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"NxIzNIhyWtDCyxrerlTrg0rSFsM=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","Game","props","data","setData","name","clicked","winState","setWinState","resetData","randomSort","console","log","clone","i","length","j","Math","floor","random","temp","handleClick","e","index","Number","target","calculatePoint","handleRestart","restart","map","card"],"sources":["/home/bbt/Downloads/memory card/memory-card/src/game.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nexport default function Game(props){\n    const [data,setData]=useState([\n        {\n            name:'Card 1',\n            clicked:false\n        },\n        {\n            name:'Card 2',\n            clicked:false\n        },\n        {\n            name:'Card 3',\n            clicked:false\n        },\n        {\n            name:'Card 4',\n            clicked:false\n        },\n        {\n            name:'Card 5',\n            clicked:false\n        },\n        {\n            name:'Card 6',\n            clicked:false\n        },\n        {\n            name:'Card 7',\n            clicked:false\n        },\n        {\n            name:'Card 8',\n            clicked:false\n        },\n        {\n            name:'Card 9',\n            clicked:false\n        },\n        {\n            name:'Card 10',\n            clicked:false\n        },\n    ]\n    )\n    const [winState,setWinState]=useState(props.winState)\n\n    function resetData(){\n        setData([\n            {\n                name:'Card 1',\n                clicked:false\n            },\n            {\n                name:'Card 2',\n                clicked:false\n            },\n            {\n                name:'Card 3',\n                clicked:false\n            },\n            {\n                name:'Card 4',\n                clicked:false\n            },\n            {\n                name:'Card 5',\n                clicked:false\n            },\n            {\n                name:'Card 6',\n                clicked:false\n            },\n            {\n                name:'Card 7',\n                clicked:false\n            },\n            {\n                name:'Card 8',\n                clicked:false\n            },\n            {\n                name:'Card 9',\n                clicked:false\n            },\n            {\n                name:'Card 10',\n                clicked:false\n            },\n        ])\n    }\n\n    function randomSort(){\n        console.log(1)\n        let clone=[...data]\n\n        for(let i=clone.length-1;i>0;i--){\n            const j =Math.floor(Math.random()*(i+1))\n            const temp=clone[i]\n            clone[i]=clone[j]\n            clone[j]=temp\n        }\n\n        setData(clone)\n    }\n\n    function handleClick(e){\n        let index=Number(e.target.name)\n\n        let clone=data\n        if (clone[index].clicked){\n            resetData()\n            randomSort()\n            props.calculatePoint(clone[index].clicked)\n\n            return\n        }\n        clone[index].clicked=true\n\n        randomSort()\n        props.calculatePoint(clone[index].clicked)\n        return\n    }\n\n    function handleRestart(){\n        resetData()\n        randomSort()\n        props.restart()\n    }\n\n    useEffect(()=>{\n        setWinState(props.winState)\n    },[props.winState])\n\n    // useEffect(()=>{\n    //     randomSort()\n    // },[])\n\n\n\n    return (\n        <div>\n            {winState?\n                (<div>\n                    <h1>You win</h1>\n                    <button onClick={handleRestart}>Restart ?</button>\n                </div>):\n                (<div >\n                    {data.map((card,index)=>{\n                            return(\n                                <div name={index} onClick={handleClick} key={index}>\n                                    <h1>{card.name}</h1>\n                                </div>\n                            )\n                    })}\n                </div>)\n        }\n        </div>\n        \n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}